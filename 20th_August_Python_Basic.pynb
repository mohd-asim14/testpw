{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4bc1361b-7be8-422c-84d2-1ed5035bc0b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sllikswP\n"
     ]
    }
   ],
   "source": [
    "#lets take input from user\n",
    "string=\"Pwskills\"\n",
    "i=string[::-1]\n",
    "print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e61b34ec-e299-419e-8952-4011d158d92c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a String: mom\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It's a Palindrome\n"
     ]
    }
   ],
   "source": [
    "String=input(\"Enter a String:\")\n",
    "if string == string[::-1]:\n",
    "    print(\"It's a Palindrome\")\n",
    "else:\n",
    "    print(\"Not a Plaindrome\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2b5ed86e-3afc-42ca-a940-db3d057eed90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'PWSKILLS'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "string.upper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d2a7f99d-0c93-4615-ae04-91388e12c2c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'pwskills'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "string.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "0034b848-0994-4909-b097-416308bb330e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the String:  aa\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of vowels: 2\n"
     ]
    }
   ],
   "source": [
    "vowels = \"aeiouAEIOU\"  # A string of vowels\n",
    "strr = input(\"Enter the String: \")\n",
    "count = 0\n",
    "\n",
    "for char in strr:\n",
    "    if char in vowels:\n",
    "        count += 1\n",
    "\n",
    "print(\"Number of vowels:\", count)\n",
    "#prints the number of vowels in a string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7af5508-5345-4d97-b219-dfa3a643ec6f",
   "metadata": {},
   "outputs": [],
   "source": [
    "con="
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
